{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catg","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","console","log","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAKaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB/C,OACI,mCACI,sBAAMC,SAbO,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAOd,SACI,uBAAOO,KAAK,OAAOC,MAAQT,EAAaU,SAlB1B,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,e,QCRnBG,EAAc,SAAC,GAAsB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IAIlC,OACI,sBAAKC,UAAU,6CAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,kCAAMA,EAAN,W,uBCTCK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,iDAEoCO,UAAWF,GAF/C,+DAIAG,MAAOR,GAJP,cAIbS,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAI1CkB,QAAQC,IAAKP,GAfM,kBAgBZA,GAhBY,4CAAH,sDCMPQ,EAAU,SAAC,GAAoB,IAAjBf,EAAgB,EAAhBA,SAAgB,ECFf,SAAEA,GAAe,IAAD,EAEdpB,mBAAS,CAC/B0B,KAAM,GACNU,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA6BxC,OArBAC,qBAAW,WAEPpB,EAASC,GACJoB,MAAM,SAAAC,GAEHC,YAAY,WAERT,QAAQC,IAAKO,GACbH,EAAS,CACLZ,KAAMe,EACNL,SAAS,MAGf,UAGZ,CAAEhB,IAKGiB,EDxByBM,CAAcvB,GAAlCW,EAH2B,EAGhCL,KAAaU,EAHmB,EAGnBA,QAGpB,OACI,qCACI,qBAAIpB,UAAU,wCAAd,cAAyDI,EAAzD,OAEEgB,GAAW,mBAAGpB,UAAU,oCAAb,wBAEb,qBAAKA,UAAU,YAAf,SAEYe,EAAOH,KAAK,SAAAC,GAAG,OACP,cAAC,EAAD,eAESA,GADCA,EAAIC,aEhBjCc,EAAe,WAAM,MAGQ5C,mBAAS,CAAE,QAHnB,mBAGvB6C,EAHuB,KAGV9C,EAHU,KAS9B,OACI,qCACI,iDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEI8C,EAAWjB,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAASA,SAAWA,GAAiBA,U,MCdzD0B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.a4aca7f8.chunk.js","sourcesContent":["\r\nimport React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ( { setCategories} ) => {\r\n\r\n    const  [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 0 ) {\r\n            //console.log('Submit Hecho');\r\n            setCategories( catg => [ inputValue, ...catg ] );   //catg contiene el stado anterio de las categorias\r\n            setInputValue('');\r\n        };\r\n\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <form onSubmit={ handleSubmit }>\r\n                <input type=\"text\" value={ inputValue } onChange={ handleInputChange }/>\r\n            </form>           \r\n        </>\r\n    )\r\n};\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,  \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n\r\n    //console.log( { title, url} );\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown\">\r\n            <img src={ url } alt={ title }/>\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=X73ok2p9E2YsmjGxasqZhjCluPdfdVpf`;\r\n    \r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    console.log( gifs );\r\n    return gifs ;\r\n}\r\n","\r\nimport React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n    \r\n    const {data:images, loading } = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInLeft\"> { category } </h3>\r\n            \r\n            { loading && <p className=\"animate__animated animate__zoomIn\">Loading...</p> }\r\n\r\n            <div className=\"card-grid\">    \r\n                    {\r\n                        images.map( img  => (\r\n                                <GifGridItem  \r\n                                    key={ img.id }\r\n                                    { ...img } \r\n                                />\r\n                        ))\r\n                    }               \r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect( () =>{\r\n\r\n        getGifs( category )\r\n            .then( imgs  => {\r\n\r\n                setTimeout( () =>{\r\n                    \r\n                    console.log( imgs );\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n\r\n                },1000);\r\n\r\n            })\r\n    },[ category ])\r\n\r\n\r\n\r\n\r\n    return state;       // { data: [], loading: true}\r\n}\r\n","\r\n\r\nimport React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = [ 'Vans','Adidas','Nike'];\r\n    const [categories , setCategories ] = useState([ 'WWE']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories( [...categories, 'Maui&Sons'] );\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <h2> Gif Expert App</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>\r\n            {\r\n                categories.map( category => \r\n                    <GifGrid category={ category } key={ category } />\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp'; \nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}